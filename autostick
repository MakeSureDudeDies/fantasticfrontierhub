function goto(pos)
	local active = true
	if not game.Workspace.HOLE:FindFirstChild("HoleTPEntrance") then
		repeat
			local prevPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1304,96,-525)
			wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = prevPos
			wait(1)
		until game.Workspace.HOLE:FindFirstChild("HoleTPEntrance")
	end

	if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - pos).magnitude < 200 then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
		wait(.3)
		local active = false
	else
		local hole = game.Workspace.HOLE.HoleTPEntrance
		local oPos = hole.Position
		local oSize = hole.Size

		hole.Size = Vector3.new(1,1,1)
		hole.Transparency = 1
		hole.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		repeat hole.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position wait() until (hole.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < 10
		hole.Position = oPos
		hole.Size = oSize
		repeat wait() until (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(430,441,102)).magnitude < 10
		for i=1, 4 do
			game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
			wait(.1)
		end
		wait(.1)
		game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
		local active = false
	end
end
if game:GetService("Workspace").PassiveNPCs["NPC_Stick"]:FindFirstChildWhichIsA("BasePart") then
    goto(game:GetService("Workspace").PassiveNPCs["NPC_Stick"]:FindFirstChildWhichIsA("BasePart").Position)
    while wait() do
        workspace.PassiveNPCs.NPC_Stick.Dialog1.D.D1.D1.C2.D1.E.RE2:FireServer()
    end
end
